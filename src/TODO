[X] Add a little program that is able to correct corrupted UUIDs from ktouchs course definitions.
	Use the parser code of QTouch and add a little writer function.
	Let the Course/Lesson setter automatically correct the UUIDs while parsing.
	Make a backup of the original course file and write the corrected back under the original filename.

[ ] Let the build system check update the course files from the ktouch repository.
	Use the corrector to automatically correct the files.
	Remember to raise any data version number for the database to know that the data must be updated.
		(Because we get other UUIDs when we correct the updated files) 

[ ] Use C++11 constructor inheritance where possible.

[ ] Use C++11 override specifier where appropriate.

[ ] Compatibility with MSVC:
	- Add macro for "noexcept" that expands to nothing, when MSVC smaller than MSVC15
		See: https://msdn.microsoft.com/de-de/library/Hh567368.aspx
	- Never forward declare a class as struct or vice versa since it leads to linkage errors.
	- Do not use multiline strings inside the QStringLiteral macro.
		See: https://blog.qt.io/blog/2014/06/13/qt-weekly-13-qstringliteral/

[ ] Add console/shell lessons.

[ ] Enter/Return can be configured to count as miss.

[ ] Import of ktouchs database.

[ ] Prevent further typing on error (configurable).

[ ] Make model from stats list.

[ ] Add finish view.

[ ] Store misses in Db.

[ ] Add configuration view.

[ ] Define what the character count includes (space, enter, ...)
